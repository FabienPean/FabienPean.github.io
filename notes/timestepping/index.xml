<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Timstepping in the wild on My Personal Website</title><link>https://fabien.pean.pro/notes/timestepping/</link><description>Recent content in Timstepping in the wild on My Personal Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 28 Dec 2020 01:23:45 +0100</lastBuildDate><atom:link href="https://fabien.pean.pro/notes/timestepping/index.xml" rel="self" type="application/rss+xml"/><item><title>TR-BDF2</title><link>https://fabien.pean.pro/notes/timestepping_tr-bdf2/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_tr-bdf2/</guid><description>Introduction TR-BDF2 is a composite time-stepping scheme operating on a single step with two substeps. The first substep is relying on the implicit midpoint method (trapezoidal rule), while the second substep uses the second order backward differentiation formula, hence the name TR-BDF2. It has been first described in [Bank1985], and is sometimes called the Bathe method after [Bathe2005]. The scheme is part of the Diagonally Implicit Runge Kutta (DIRK) family of methods.</description></item><item><title>Backward Differentiation Formula</title><link>https://fabien.pean.pro/notes/timestepping_bdf/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_bdf/</guid><description>Backward Differentiation Formula Starting from an unknown continuous function of time \(\mathbf q(T)\), the solution can be found numerically at discretized time points \(T_n\) with \(n\in \mathbb N\) where, to simplify the notations \(\mathbf q_n = \mathbf q(T_n)\). The goal is to be able to compute \(\mathbf q_{n+1}\) from previous known discrete values. The BDF way to proceed is to assume that the real solution can be interpolated using Lagrange polynomials.</description></item><item><title>Theta method</title><link>https://fabien.pean.pro/notes/timestepping_theta/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_theta/</guid><description>Notations Let be \(\mathbf{q}\) be a field function of time \(t\) and \(\mathbf{\dot q}, \mathbf{\ddot q}\) be its first and second derivatives with respect to time, \[ \begin{aligned} \mathbf{q} &amp;amp;= \mathbf{q}(t)\\ \mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\ \mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d} t}\\ \end{aligned} \] In order to make the description of the time integration algorithms less abstract, one can think of $,, $ as position, velocity and acceleration. Moreover, the balance of momentum equation is considered for a concrete derivation of the scheme.</description></item><item><title>Implicit Euler</title><link>https://fabien.pean.pro/notes/timestepping_implicit_euler/</link><pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_implicit_euler/</guid><description>Notations Let be \(\mathbf{q}\) be a field function of time \(t\) and \(\mathbf{\dot q}, \mathbf{\ddot q}\) be its first and second derivatives with respect to time, \[ \begin{aligned} \mathbf{q} &amp;amp;= \mathbf{q}(t)\\ \mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\ \mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d} t}\\ \end{aligned} \] In order to make the description of the time integration algorithms less abstract, one can think of $,, $ as position, velocity and acceleration. Moreover, the balance of momentum equation is considered for a concrete derivation of the scheme.</description></item><item><title>Implicit midpoint method</title><link>https://fabien.pean.pro/notes/timestepping_implicit_midpoint_method/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_implicit_midpoint_method/</guid><description>Notations Let be \(\mathbf{q}\) be a field function of time \(t\) and \(\mathbf{\dot q}, \mathbf{\ddot q}\) be its first and second derivatives with respect to time \[ \left\{\begin{aligned} \mathbf{q} &amp;amp;= \mathbf{q}(t)\\ \mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\ \mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d} t}\\ \end{aligned}\right. \] In order to make the description of the time integration algorithms less abstract, one can think of \(\mathbf{q},\mathbf{\dot q},\mathbf{\ddot q}\) as position, velocity and acceleration.</description></item></channel></rss>