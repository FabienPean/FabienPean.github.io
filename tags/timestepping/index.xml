<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Timestepping on My Personal Website</title><link>https://fabien.pean.pro/tags/timestepping/</link><description>Recent content in Timestepping on My Personal Website</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 19 Sep 2024 23:12:53 +0200</lastBuildDate><atom:link href="https://fabien.pean.pro/tags/timestepping/index.xml" rel="self" type="application/rss+xml"/><item><title>TR-BDF2</title><link>https://fabien.pean.pro/notes/timestepping_tr-bdf2/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_tr-bdf2/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>TR-BDF2 is a composite time-stepping scheme operating on a single
step with two substeps. The first substep is relying on the &lt;a
href="../timestepping_implicit_midpoint_method">implicit midpoint&lt;/a>
method (trapezoidal rule), while the second substep uses the second
order &lt;a href="../timestepping_bdf">backward differentiation
formula&lt;/a>, hence the name TR-BDF2. It has been first described in &lt;a
href="https://doi.org/10.1109/T-ED.1985.22232">[Bank1985]&lt;/a>, and is
sometimes called the Bathe method after &lt;a
href="https://doi.org/10.1016/j.compstruc.2005.08.001">[Bathe2005]&lt;/a>.
The scheme is part of the Diagonally Implicit Runge Kutta (DIRK) family
of methods. Under some condition, it can also be part of the singly DIRK
subset, which means that the same Newton iteration matrix can be used
for both sub-steps.&lt;/p></description></item><item><title>Backward Differentiation Formula</title><link>https://fabien.pean.pro/notes/timestepping_bdf/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_bdf/</guid><description>&lt;h2 id="backward-differentiation-formula">Backward Differentiation
Formula&lt;/h2>
&lt;p>Starting from an unknown continuous function of time &lt;span
class="math inline">\(\mathbf q(T)\)&lt;/span>, the solution can be found
numerically at discretized time points &lt;span
class="math inline">\(T_n\)&lt;/span> with &lt;span class="math inline">\(n\in
\mathbb N\)&lt;/span> where, to simplify the notations &lt;span
class="math inline">\(\mathbf q_n = \mathbf q(T_n)\)&lt;/span>. The goal is
to be able to compute &lt;span class="math inline">\(\mathbf
q_{n+1}\)&lt;/span> from previous known discrete values. The BDF way to
proceed is to assume that the real solution can be interpolated using
Lagrange polynomials.&lt;/p></description></item><item><title>Theta method</title><link>https://fabien.pean.pro/notes/timestepping_theta/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_theta/</guid><description>&lt;h2 id="notations">Notations&lt;/h2>
&lt;p>Let be &lt;span class="math inline">\(\mathbf{q}\)&lt;/span> be a field
function of time &lt;span class="math inline">\(t\)&lt;/span> and &lt;span
class="math inline">\(\mathbf{\dot q}, \mathbf{\ddot q}\)&lt;/span> be its
first and second derivatives with respect to time, &lt;span
class="math display">\[
\begin{aligned}
\mathbf{q} &amp;amp;= \mathbf{q}(t)\\
\mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\
\mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d}
t}\\
\end{aligned}
\]&lt;/span> In order to make the description of the time integration
algorithms less abstract, one can think of $,, $ as position, velocity
and acceleration. Moreover, the balance of momentum equation is
considered for a concrete derivation of the scheme. Therefore, &lt;span
class="math display">\[
\notag
\mathbf M \mathbf{\ddot q} +\mathbf{f} = 0 \quad \text{where} \quad
\mathbf{f} = \mathbf{f}\left(\mathbf{q}(t),\mathbf{\dot q}(t)\right)
\]&lt;/span> The mass matrix &lt;span
class="math inline">\(\mathbf{M}\)&lt;/span> is assumed constant. In
addition, to facilitate the notations, the superscripts involving &lt;span
class="math inline">\(t\)&lt;/span> will be used to denote time points such
that &lt;span class="math inline">\(\mathbf{q}^{t+\tau} =
\mathbf{q}(t+\tau)\)&lt;/span> represents the discrete value of &lt;span
class="math inline">\(\mathbf{q}\)&lt;/span> at time &lt;span
class="math inline">\(t+\tau\)&lt;/span>, while subscript involving &lt;span
class="math inline">\(n\)&lt;/span> as in &lt;span
class="math inline">\(\mathbf{q}_n^t\)&lt;/span> will represent the value
of &lt;span class="math inline">\(\mathbf{q}^t\)&lt;/span> at some iteration
&lt;span class="math inline">\(n\)&lt;/span>. The symbol &lt;span
class="math inline">\(\tau\)&lt;/span> represents the timestep.&lt;/p></description></item><item><title>Implicit Euler</title><link>https://fabien.pean.pro/notes/timestepping_implicit_euler/</link><pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_implicit_euler/</guid><description>&lt;h2 id="notations">Notations&lt;/h2>
&lt;p>Let be &lt;span class="math inline">\(\mathbf{q}\)&lt;/span> be a field
function of time &lt;span class="math inline">\(t\)&lt;/span> and &lt;span
class="math inline">\(\mathbf{\dot q}, \mathbf{\ddot q}\)&lt;/span> be its
first and second derivatives with respect to time, &lt;span
class="math display">\[
\begin{aligned}
\mathbf{q} &amp;amp;= \mathbf{q}(t)\\
\mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\
\mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d}
t}\\
\end{aligned}
\]&lt;/span> In order to make the description of the time integration
algorithms less abstract, one can think of $,, $ as position, velocity
and acceleration. Moreover, the balance of momentum equation is
considered for a concrete derivation of the scheme. Therefore, &lt;span
class="math display">\[
\notag
\mathbf M \mathbf{\ddot q} +\mathbf{f} = 0 \quad \text{where} \quad
\mathbf{f} = \mathbf{f}\left(\mathbf{q}(t),\mathbf{\dot q}(t)\right)
\]&lt;/span> The mass matrix &lt;span
class="math inline">\(\mathbf{M}\)&lt;/span> is assumed constant. In
addition, to facilitate the notations, the superscripts involving &lt;span
class="math inline">\(t\)&lt;/span> will be used to denote time points such
that &lt;span class="math inline">\(\mathbf{q}^{t+\tau} =
\mathbf{q}(t+\tau)\)&lt;/span> represents the discrete value of &lt;span
class="math inline">\(\mathbf{q}\)&lt;/span> at time &lt;span
class="math inline">\(t+\tau\)&lt;/span>, while subscript involving &lt;span
class="math inline">\(n\)&lt;/span> as in &lt;span
class="math inline">\(\mathbf{q}_n^t\)&lt;/span> will represent the value
of &lt;span class="math inline">\(\mathbf{q}^t\)&lt;/span> at some iteration
&lt;span class="math inline">\(n\)&lt;/span>. The symbol &lt;span
class="math inline">\(\tau\)&lt;/span> represents the timestep.&lt;/p></description></item><item><title>Timstepping in the wild</title><link>https://fabien.pean.pro/notes/timestepping/</link><pubDate>Mon, 28 Dec 2020 01:23:45 +0100</pubDate><guid>https://fabien.pean.pro/notes/timestepping/</guid><description>&lt;p>Description, linearization of time integration scheme for the numerical simulation of dynamic systems, principally oriented towards mechanics.&lt;/p></description></item><item><title>Implicit midpoint method</title><link>https://fabien.pean.pro/notes/timestepping_implicit_midpoint_method/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_implicit_midpoint_method/</guid><description>&lt;h2 id="notations">Notations&lt;/h2>
&lt;p>Let be &lt;span class="math inline">\(\mathbf{q}\)&lt;/span> be a field
function of time &lt;span class="math inline">\(t\)&lt;/span> and &lt;span
class="math inline">\(\mathbf{\dot q}, \mathbf{\ddot q}\)&lt;/span> be its
first and second derivatives with respect to time &lt;span
class="math display">\[
\left\{\begin{aligned}
\mathbf{q} &amp;amp;= \mathbf{q}(t)\\
\mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\
\mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d}
t}\\
\end{aligned}\right.
\]&lt;/span> In order to make the description of the time integration
algorithms less abstract, one can think of &lt;span
class="math inline">\(\mathbf{q},\mathbf{\dot q},\mathbf{\ddot
q}\)&lt;/span> as position, velocity and acceleration. Moreover, the
balance of momentum equation is considered for a concrete derivation of
the scheme. Therefore, &lt;span class="math display">\[
\notag
\mathbf M \mathbf{\ddot q} +\mathbf{f} = 0 \quad \text{where} \quad
\mathbf{f} = \mathbf{f}\left(\mathbf{q}\left(t\right),\mathbf{\dot
q}\left(t\right)\right)
\]&lt;/span> The mass matrix &lt;span
class="math inline">\(\mathbf{M}\)&lt;/span> is assumed constant. In
addition, to facilitate the notations, the superscripts involving &lt;span
class="math inline">\(t\)&lt;/span> will be used to denote time points such
that &lt;span class="math inline">\(\mathbf{q}^{t+\tau} =
\mathbf{q}(t+\tau)\)&lt;/span> represents the discrete value of &lt;span
class="math inline">\(\mathbf{q}\)&lt;/span> at time &lt;span
class="math inline">\(t+\tau\)&lt;/span>, while subscript involving &lt;span
class="math inline">\(n\)&lt;/span> as in &lt;span
class="math inline">\(\mathbf{q}_n^t\)&lt;/span> will represent the value
of &lt;span class="math inline">\(\mathbf{q}^t\)&lt;/span> at some iteration
&lt;span class="math inline">\(n\)&lt;/span>. The symbol &lt;span
class="math inline">\(\tau\)&lt;/span> represents the timestep.&lt;/p></description></item></channel></rss>