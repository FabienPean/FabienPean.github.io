<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Personal Website</title><link>https://fabien.pean.pro/</link><description>Recent content on My Personal Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 Mar 2018 00:27:05 +0100</lastBuildDate><atom:link href="https://fabien.pean.pro/index.xml" rel="self" type="application/rss+xml"/><item><title>A simple heterogeneous container in C&amp;plus;&amp;plus; without relying on 'variant' nor 'any'</title><link>https://fabien.pean.pro/blog/2020/08/a-simple-heterogeneous-container-in-cplusplus-without-relying-on-variant-nor-any/</link><pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/blog/2020/08/a-simple-heterogeneous-container-in-cplusplus-without-relying-on-variant-nor-any/</guid><description>Building an heterogeneous container: basic ingredients In a precedent post, I outlined the implementation of an heterogeneous dynamic array. Let us try now to reflect on what was done to draw some genericity out of it.
The basic ingredients to build an heterogeneous container are:
data the object ptr where the object is stored: a pointer or offset allowing to find the object in memory tag what is the type of that object: a unique way to identify types at runtime.</description></item><item><title>About</title><link>https://fabien.pean.pro/home/about/</link><pubDate>Sat, 11 Jul 2020 19:03:55 +0200</pubDate><guid>https://fabien.pean.pro/home/about/</guid><description>Hello there ! Welcome to my personal website, I am currently a PhD student at ETH Zurich where I work on the musculoskeletal modelling and simulation of the shoulder.
In general, I am fond of numerical methods and modelling approaches in the field of computational science, especially solid mechanics, with an accent on high-performance computing. My passion revolves around the interactive simulation of deformable bodies.
My interests condensed in a list:</description></item><item><title>Implementing an heterogeneous dynamic array in C&amp;plus;&amp;plus;</title><link>https://fabien.pean.pro/blog/2020/07/implementing-an-heterogeneous-dynamic-array-in-cplusplus/</link><pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/blog/2020/07/implementing-an-heterogeneous-dynamic-array-in-cplusplus/</guid><description>Introduction heterogeneous: consisting of dissimilar or diverse constituents
dynamic array: a dynamic array is a random access, variable-size list data structure that allows elements to be added or removed. [&amp;hellip;] A simple dynamic array can be constructed by allocating an array of fixed-size, typically larger than the number of elements immediately required. The elements of the dynamic array are stored contiguously at the start of the underlying array, [&amp;hellip;]</description></item><item><title>New paper published in Medical Engineering and Physics</title><link>https://fabien.pean.pro/news/2020/07/new-paper-published-in-medical-engineering-and-physics/</link><pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/news/2020/07/new-paper-published-in-medical-engineering-and-physics/</guid><description>My paper titled Surface-based Modeling of Muscles: Functional Simulation of the Shoulder is now online ! Elsevier provides free access to it until 27/08/2020 at this address: https://authors.elsevier.com/a/1bM-N4p3hgSJXN</description></item><item><title>Welcome to my website, I will be your guide</title><link>https://fabien.pean.pro/news/2020/03/welcome-to-my-website-i-will-be-your-guide/</link><pubDate>Sun, 29 Mar 2020 19:21:01 +0200</pubDate><guid>https://fabien.pean.pro/news/2020/03/welcome-to-my-website-i-will-be-your-guide/</guid><description>A warm welcome to my personal website. After a long maturation time, it is finally online! :tada:
It was developed from scratch with Hugo, a great static site generator, and inspired myself or sometimes reused bits from the nice Academic theme by Georges Cushen. During the journey, I learned a lot about html, css and hugo.
Why from scratch? For two main reasons: one is that I had a precise design in mind, and the other was that I wanted to keep it as minimal as possible for my needs.</description></item></channel></rss>