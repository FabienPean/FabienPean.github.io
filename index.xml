<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Personal Website</title><link>https://fabien.pean.pro/</link><description>Recent content on My Personal Website</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 19 Sep 2024 23:12:53 +0200</lastBuildDate><atom:link href="https://fabien.pean.pro/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://fabien.pean.pro/home/about/</link><pubDate>Tue, 03 Oct 2023 15:03:58 +0200</pubDate><guid>https://fabien.pean.pro/home/about/</guid><description>&lt;h1 id="hello-there-">Hello there !&lt;/h1>
&lt;p>Welcome to my personal website, I am currently senior simulation engineer at &lt;a href="https://virtonomy.io">Virtonomy&lt;/a>. Prior that, I defended my PhD at ETH Zurich where I was working on the musculoskeletal modeling and simulation of the shoulder, see &lt;a href="https://fabien.pean.pro/projects/phd_shoulder/">here&lt;/a> for more details.&lt;/p>
&lt;p>In general, I am fond of numerical methods and modeling approaches in the field of computational science, especially solid mechanics, with an accent on high-performance computing.
My passion revolves around the interactive simulation of deformable bodies.&lt;/p></description></item><item><title>Deep down the FOSS: an unexpected journey</title><link>https://fabien.pean.pro/blog/2023/04/deep-down-the-foss-an-unexpected-journey/</link><pubDate>Sat, 08 Apr 2023 18:38:41 +0200</pubDate><guid>https://fabien.pean.pro/blog/2023/04/deep-down-the-foss-an-unexpected-journey/</guid><description>&lt;!-- &lt;img src="an-unexpected-journey.jpg"/> -->
&lt;h2 id="once-upon-a-vegafem">Once upon a VegaFEM&lt;/h2>
&lt;p>It all began with a spark&amp;hellip;&lt;/p>
&lt;p>On my spare time, I decided to sharpen my skills and change my mind by toying with &lt;a href="https://viterbi-web.usc.edu/~jbarbic/vega/">VegaFEM&lt;/a>, an open-source (&lt;a href="https://spdx.org/licenses/BSD-3-Clause.html">BSD-3-Clause&lt;/a>) middleware providing facilities for soft-body simulation in the realm of computer graphics. It has been developed by &lt;a href="http://www.jernejbarbic.com/">Jernej Barbič&lt;/a> and his group over many years, yet, it does not have an official release on any major git repository hosting websites. Its distribution occurs through the personal webpage, and copies elsewhere are often ephemeral results of isolated contributors. I decided to give a go on my own with the latest version (4.0.0) and let &lt;a href="https://github.com/FabienPean/VegaFEM">my repository&lt;/a> join the rank of numerous forks. Doing so with this library offers the possibility to work on many aspects related to devops, maintenance, and development.&lt;/p></description></item><item><title>Starting a new job at Virtonomy</title><link>https://fabien.pean.pro/news/2022/02/starting-a-new-job-at-virtonomy/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/news/2022/02/starting-a-new-job-at-virtonomy/</guid><description>&lt;p>On February 1st 2022, I officially start a new adventure as Senior Simulation Engineer at &lt;a href="http://www.virtonomy.io">Virtonomy&lt;/a> :tada: My mission there will be to develop methods and applications for the simulation of cardiovascular related medical scenarios :heart:, with the aim to shorten time to market for medical devices developers. Once this is well-established, direction orthopedics :rocket:&lt;/p></description></item><item><title>New paper published in Clinical Biomechanics</title><link>https://fabien.pean.pro/news/2021/12/new-paper-published-in-clinical-biomechanics/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/news/2021/12/new-paper-published-in-clinical-biomechanics/</guid><description>&lt;p>My paper titled &lt;em>Computational analysis of subscapularis tears and pectoralis major transfers on muscular activity&lt;/em>, published in Clinical Biomechanics, is now online ! It is freely accessible under a Creative Commons license, thanks to the agreement between ETH Zurich and Elsevier, at this &lt;a href="https://doi.org/10.1016/j.clinbiomech.2021.105541">url&lt;/a>. This article brings a conclusion to a long journey as it is the last work elaborated during my PhD. Many thanks to my co-authors Dr. Philippe Favre and Prof. Orcun Goksel for this and previous works, whose remarks were greatly beneficial to improve the overall quality of this paper. Stay tuned for new adventures !&lt;/p></description></item><item><title>Nitsche method for weakly enforced Dirichlet boundary conditions</title><link>https://fabien.pean.pro/notes/boundarycondition_weak_nitsche/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/boundarycondition_weak_nitsche/</guid><description>&lt;h2 id="disclaimer">Disclaimer&lt;/h2>
&lt;p>For the sake of simplicity, the following post focuses on weak
Dirichlet boundary conditions applied to the linear elastostatics
problem. This document reflects my understanding and interpretation of
the method. If you spot a mistake, please let me know !&lt;/p>
&lt;h2 id="context">Context&lt;/h2>
&lt;p>Numerical models of physical systems are often represented as
Boundary Value Problem, which consists of a Partial Differential
Equation governing the domain accompanied by boundary conditions, known
values on the boundary of the domain. Boundary conditions are
effectively constraints: they are values that must be enforced at some
coordinates. Boundary conditions applied directly on the unknown field
are called essential or Dirichlet boundary conditions. The spatial
discretization required by the weak form of the problem is often chosen
to match the boundary of the domain of interest. Together with an
interpolating polynomial space, this enables to statically condense out
known values from the resulting linear system of equations. However,
this does not have to be the case, and the discretized space can cover
the domain of interest. In such cases, the essential boundary conditions
cannot be straightforwardly enforced.&lt;/p></description></item><item><title>New paper published in Journal of Biomechanics</title><link>https://fabien.pean.pro/news/2021/11/new-paper-published-in-journal-of-biomechanics/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/news/2021/11/new-paper-published-in-journal-of-biomechanics/</guid><description>&lt;p>My paper titled &lt;em>Influence of rotator cuff integrity on loading and kinematics before and after reverse shoulder arthroplasty&lt;/em> published in Journal of Biomechanics is now online ! It is freely accessible under a Creative Commons license, thanks to the agreement between ETH Zurich and Elsevier, at this &lt;a href="https://doi.org/10.1016/j.jbiomech.2021.110778">url&lt;/a>&lt;/p></description></item><item><title>Dynamical system control</title><link>https://fabien.pean.pro/notes/dynamical_system_control/</link><pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/dynamical_system_control/</guid><description>&lt;p>&lt;span
class="math inline">\(\newcommand{\T}{\mathsf{\small{T}}}\newcommand{\d}{\mathrm{d}}\)&lt;/span>&lt;/p>
&lt;h2 id="notations">Notations&lt;/h2>
&lt;p>Let &lt;span class="math inline">\(\mathbf{q},\mathbf{\dot
q},\mathbf{\ddot q}\)&lt;/span> be the generalized coordinates, velocities,
and accelerations. The vector &lt;span
class="math inline">\(\mathbf{a}\)&lt;/span> represent the controllable
parameters, which are to be read as the &lt;em>activation&lt;/em> parameters.
The superscripts involving &lt;span class="math inline">\(t\)&lt;/span> will
be used to denote time points such that &lt;span
class="math inline">\(\mathbf{q}^{t+\tau} = \mathbf{q}(t+\tau)\)&lt;/span>
represents the discrete value of &lt;span
class="math inline">\(\mathbf{q}\)&lt;/span> at time &lt;span
class="math inline">\(t+\tau\)&lt;/span>, while subscript involving &lt;span
class="math inline">\(n\)&lt;/span> as in &lt;span
class="math inline">\(\mathbf{q}_n^t\)&lt;/span> will represent the value
of &lt;span class="math inline">\(\mathbf{q}^t\)&lt;/span> at some iteration
&lt;span class="math inline">\(n\)&lt;/span>. The symbol &lt;span
class="math inline">\(\tau\)&lt;/span> represents the timestep.&lt;/p></description></item><item><title>Musculoskeletal Shoulder Simulation</title><link>https://fabien.pean.pro/projects/phd_shoulder/</link><pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/projects/phd_shoulder/</guid><description>&lt;p>Correct diagnosis and deep understanding of a condition is the general prerequisite for providing an optimal treatment. Injuries and diseases affecting the musculoskeletal system and their impact are difficult to reproduce in controlled and repeatable settings. Impairments greatly restrict the patient&amp;rsquo;s ability to carry out common daily tasks vital for remaining independent. In particular, many activities rely on the extensive reachability offered by the upper limb.&lt;/p>
&lt;p>The shoulder offers the greatest range-of-motion in the whole human body and plays a key role in enabling the execution of common daily tasks vital for remaining independent, which is only possible thanks to its unique structure. Indeed, the shoulder consists of loosely connected bones maintained in their desired positions by many muscles, which play a vital role in moving the arm and transferring the load from the upper limb to the trunk. However, it means that the various observable properties are the result of a complex set of neurological processes, which coordinates the many muscles for actuating the upper limb. Active motion, as the result of conscious decision, is a key aspect of understanding pathology and their potential solution. Unfortunately, it is this particular aspect that is difficult to study for practical and ethical reasons. Alternative to clinical and ex-vivo studies falling under the aforementioned concerns, numerical models of the musculoskeletal system offer a great opportunity for an ethical, reproducible, and flexible means to analyze in-depth the human movement and its intrinsic properties. However, several outstanding challenges in modeling have long delayed the application of such models in concrete clinical and biomechanical scenarios.&lt;/p></description></item><item><title>PhD thesis defended with success</title><link>https://fabien.pean.pro/news/2021/02/phd-thesis-defended-with-success/</link><pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/news/2021/02/phd-thesis-defended-with-success/</guid><description>&lt;p>I am thrilled to announce that I successfully defended my PhD thesis. :tada::tada::tada:&lt;/p>
&lt;p>Entitled &amp;ldquo;Computational Modeling and Simulation of the Shoulder for Functional Analysis of Orthopedic Surgery Outcomes&amp;rdquo;, it was carried out at &lt;a href="https://ethz.ch">ETH Zurich&lt;/a> in collaboration with &lt;a href="https://www.balgrist.ch/">Balgrist University Hospital&lt;/a> and &lt;a href="https://ch.linkedin.com/in/philippefavre">Dr. Philippe Favre&lt;/a> from Zimmer Biomet. During my PhD, I developed numerical models of the shoulder to better understand the musculoskeletal system during active movement under various clinical conditions and their treatments. Thanks to everyone supporting me all these years and making this a reality !&lt;/p></description></item><item><title>TR-BDF2</title><link>https://fabien.pean.pro/notes/timestepping_tr-bdf2/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_tr-bdf2/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>TR-BDF2 is a composite time-stepping scheme operating on a single
step with two substeps. The first substep is relying on the &lt;a
href="../timestepping_implicit_midpoint_method">implicit midpoint&lt;/a>
method (trapezoidal rule), while the second substep uses the second
order &lt;a href="../timestepping_bdf">backward differentiation
formula&lt;/a>, hence the name TR-BDF2. It has been first described in &lt;a
href="https://doi.org/10.1109/T-ED.1985.22232">[Bank1985]&lt;/a>, and is
sometimes called the Bathe method after &lt;a
href="https://doi.org/10.1016/j.compstruc.2005.08.001">[Bathe2005]&lt;/a>.
The scheme is part of the Diagonally Implicit Runge Kutta (DIRK) family
of methods. Under some condition, it can also be part of the singly DIRK
subset, which means that the same Newton iteration matrix can be used
for both sub-steps.&lt;/p></description></item><item><title>Backward Differentiation Formula</title><link>https://fabien.pean.pro/notes/timestepping_bdf/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_bdf/</guid><description>&lt;h2 id="backward-differentiation-formula">Backward Differentiation
Formula&lt;/h2>
&lt;p>Starting from an unknown continuous function of time &lt;span
class="math inline">\(\mathbf q(T)\)&lt;/span>, the solution can be found
numerically at discretized time points &lt;span
class="math inline">\(T_n\)&lt;/span> with &lt;span class="math inline">\(n\in
\mathbb N\)&lt;/span> where, to simplify the notations &lt;span
class="math inline">\(\mathbf q_n = \mathbf q(T_n)\)&lt;/span>. The goal is
to be able to compute &lt;span class="math inline">\(\mathbf
q_{n+1}\)&lt;/span> from previous known discrete values. The BDF way to
proceed is to assume that the real solution can be interpolated using
Lagrange polynomials.&lt;/p></description></item><item><title>Theta method</title><link>https://fabien.pean.pro/notes/timestepping_theta/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_theta/</guid><description>&lt;h2 id="notations">Notations&lt;/h2>
&lt;p>Let be &lt;span class="math inline">\(\mathbf{q}\)&lt;/span> be a field
function of time &lt;span class="math inline">\(t\)&lt;/span> and &lt;span
class="math inline">\(\mathbf{\dot q}, \mathbf{\ddot q}\)&lt;/span> be its
first and second derivatives with respect to time, &lt;span
class="math display">\[
\begin{aligned}
\mathbf{q} &amp;amp;= \mathbf{q}(t)\\
\mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\
\mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d}
t}\\
\end{aligned}
\]&lt;/span> In order to make the description of the time integration
algorithms less abstract, one can think of $,, $ as position, velocity
and acceleration. Moreover, the balance of momentum equation is
considered for a concrete derivation of the scheme. Therefore, &lt;span
class="math display">\[
\notag
\mathbf M \mathbf{\ddot q} +\mathbf{f} = 0 \quad \text{where} \quad
\mathbf{f} = \mathbf{f}\left(\mathbf{q}(t),\mathbf{\dot q}(t)\right)
\]&lt;/span> The mass matrix &lt;span
class="math inline">\(\mathbf{M}\)&lt;/span> is assumed constant. In
addition, to facilitate the notations, the superscripts involving &lt;span
class="math inline">\(t\)&lt;/span> will be used to denote time points such
that &lt;span class="math inline">\(\mathbf{q}^{t+\tau} =
\mathbf{q}(t+\tau)\)&lt;/span> represents the discrete value of &lt;span
class="math inline">\(\mathbf{q}\)&lt;/span> at time &lt;span
class="math inline">\(t+\tau\)&lt;/span>, while subscript involving &lt;span
class="math inline">\(n\)&lt;/span> as in &lt;span
class="math inline">\(\mathbf{q}_n^t\)&lt;/span> will represent the value
of &lt;span class="math inline">\(\mathbf{q}^t\)&lt;/span> at some iteration
&lt;span class="math inline">\(n\)&lt;/span>. The symbol &lt;span
class="math inline">\(\tau\)&lt;/span> represents the timestep.&lt;/p></description></item><item><title>Implicit Euler</title><link>https://fabien.pean.pro/notes/timestepping_implicit_euler/</link><pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_implicit_euler/</guid><description>&lt;h2 id="notations">Notations&lt;/h2>
&lt;p>Let be &lt;span class="math inline">\(\mathbf{q}\)&lt;/span> be a field
function of time &lt;span class="math inline">\(t\)&lt;/span> and &lt;span
class="math inline">\(\mathbf{\dot q}, \mathbf{\ddot q}\)&lt;/span> be its
first and second derivatives with respect to time, &lt;span
class="math display">\[
\begin{aligned}
\mathbf{q} &amp;amp;= \mathbf{q}(t)\\
\mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\
\mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d}
t}\\
\end{aligned}
\]&lt;/span> In order to make the description of the time integration
algorithms less abstract, one can think of $,, $ as position, velocity
and acceleration. Moreover, the balance of momentum equation is
considered for a concrete derivation of the scheme. Therefore, &lt;span
class="math display">\[
\notag
\mathbf M \mathbf{\ddot q} +\mathbf{f} = 0 \quad \text{where} \quad
\mathbf{f} = \mathbf{f}\left(\mathbf{q}(t),\mathbf{\dot q}(t)\right)
\]&lt;/span> The mass matrix &lt;span
class="math inline">\(\mathbf{M}\)&lt;/span> is assumed constant. In
addition, to facilitate the notations, the superscripts involving &lt;span
class="math inline">\(t\)&lt;/span> will be used to denote time points such
that &lt;span class="math inline">\(\mathbf{q}^{t+\tau} =
\mathbf{q}(t+\tau)\)&lt;/span> represents the discrete value of &lt;span
class="math inline">\(\mathbf{q}\)&lt;/span> at time &lt;span
class="math inline">\(t+\tau\)&lt;/span>, while subscript involving &lt;span
class="math inline">\(n\)&lt;/span> as in &lt;span
class="math inline">\(\mathbf{q}_n^t\)&lt;/span> will represent the value
of &lt;span class="math inline">\(\mathbf{q}^t\)&lt;/span> at some iteration
&lt;span class="math inline">\(n\)&lt;/span>. The symbol &lt;span
class="math inline">\(\tau\)&lt;/span> represents the timestep.&lt;/p></description></item><item><title>Implicit midpoint method</title><link>https://fabien.pean.pro/notes/timestepping_implicit_midpoint_method/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/timestepping_implicit_midpoint_method/</guid><description>&lt;h2 id="notations">Notations&lt;/h2>
&lt;p>Let be &lt;span class="math inline">\(\mathbf{q}\)&lt;/span> be a field
function of time &lt;span class="math inline">\(t\)&lt;/span> and &lt;span
class="math inline">\(\mathbf{\dot q}, \mathbf{\ddot q}\)&lt;/span> be its
first and second derivatives with respect to time &lt;span
class="math display">\[
\left\{\begin{aligned}
\mathbf{q} &amp;amp;= \mathbf{q}(t)\\
\mathbf{\dot q} &amp;amp;= \frac{\mathrm{d} \mathbf{q}}{\mathrm{d} t}\\
\mathbf{\ddot q} &amp;amp;= \frac{\mathrm{d} \mathbf{\dot q}}{\mathrm{d}
t}\\
\end{aligned}\right.
\]&lt;/span> In order to make the description of the time integration
algorithms less abstract, one can think of &lt;span
class="math inline">\(\mathbf{q},\mathbf{\dot q},\mathbf{\ddot
q}\)&lt;/span> as position, velocity and acceleration. Moreover, the
balance of momentum equation is considered for a concrete derivation of
the scheme. Therefore, &lt;span class="math display">\[
\notag
\mathbf M \mathbf{\ddot q} +\mathbf{f} = 0 \quad \text{where} \quad
\mathbf{f} = \mathbf{f}\left(\mathbf{q}\left(t\right),\mathbf{\dot
q}\left(t\right)\right)
\]&lt;/span> The mass matrix &lt;span
class="math inline">\(\mathbf{M}\)&lt;/span> is assumed constant. In
addition, to facilitate the notations, the superscripts involving &lt;span
class="math inline">\(t\)&lt;/span> will be used to denote time points such
that &lt;span class="math inline">\(\mathbf{q}^{t+\tau} =
\mathbf{q}(t+\tau)\)&lt;/span> represents the discrete value of &lt;span
class="math inline">\(\mathbf{q}\)&lt;/span> at time &lt;span
class="math inline">\(t+\tau\)&lt;/span>, while subscript involving &lt;span
class="math inline">\(n\)&lt;/span> as in &lt;span
class="math inline">\(\mathbf{q}_n^t\)&lt;/span> will represent the value
of &lt;span class="math inline">\(\mathbf{q}^t\)&lt;/span> at some iteration
&lt;span class="math inline">\(n\)&lt;/span>. The symbol &lt;span
class="math inline">\(\tau\)&lt;/span> represents the timestep.&lt;/p></description></item><item><title>Fastest heterogeneous container and benchmarks</title><link>https://fabien.pean.pro/blog/2020/11/fastest-heterogeneous-container-and-benchmarks/</link><pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/blog/2020/11/fastest-heterogeneous-container-and-benchmarks/</guid><description>&lt;p>While doing some benchmarks with the heterogeneous containers described &lt;a href="https://fabien.pean.pro/blog/2020/07/implementing-an-heterogeneous-dynamic-array-in-cplusplus/">here&lt;/a> and &lt;a href="https://fabien.pean.pro/blog/2020/08/a-simple-heterogeneous-container-in-cplusplus-without-relying-on-variant-nor-any/">here&lt;/a> along with some related containers, I could not but notice the performance of &lt;a href="https://github.com/skypjack/entt">entt&lt;/a>, more specifically its &lt;em>registry&lt;/em> class which relies on a modified sparse set data structure. In front of such witchcraft, I decided to delve behind the curtains and see for myself the performance of an heterogeneous container based on it.&lt;/p>
&lt;h2 id="sparse-sets">Sparse sets&lt;/h2>
&lt;p>Sparse sets are data structures widely covered (&lt;a href="https://programmingpraxis.com/2012/03/09/sparse-sets/">1&lt;/a>, &lt;a href="https://www.geeksforgeeks.org/sparse-set/">2&lt;/a>, &lt;a href="https://skypjack.github.io/2019-09-25-ecs-baf-part-5/">3&lt;/a>, &lt;a href="https://doi.org/10.1145/176454.176484">4&lt;/a>). I will give a shot here and explain succinctly and as clear as possible the concepts behind the data structure.&lt;/p></description></item><item><title>WTF C&amp;plus;&amp;plus;</title><link>https://fabien.pean.pro/notes/wtf-cplusplus/</link><pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/notes/wtf-cplusplus/</guid><description>&lt;p>In this page, I enumerate various C++ fragments that sparkled my incomprehension when I encountered them, or made me scratch my head far too long. It is meant to be a reminder mainly for myself and destined to be updated over time.&lt;/p></description></item><item><title>A simple heterogeneous container in C&amp;plus;&amp;plus; without relying on 'variant' nor 'any'</title><link>https://fabien.pean.pro/blog/2020/08/a-simple-heterogeneous-container-in-cplusplus-without-relying-on-variant-nor-any/</link><pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/blog/2020/08/a-simple-heterogeneous-container-in-cplusplus-without-relying-on-variant-nor-any/</guid><description>&lt;h2 id="building-an-heterogeneous-container-basic-ingredients">Building an heterogeneous container: basic ingredients&lt;/h2>
&lt;p>In a precedent post, I outlined the implementation of an heterogeneous dynamic array. Let us try now to reflect on what was done to draw some genericity out of it.&lt;/p>
&lt;p>The basic ingredients to build an heterogeneous container are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>data&lt;/code> the object&lt;/li>
&lt;li>&lt;code>ptr&lt;/code> where the object is stored: a pointer or offset allowing to find the object in memory&lt;/li>
&lt;li>&lt;code>tag&lt;/code> what is the type of that object: a unique way to identify types at runtime.&lt;/li>
&lt;li>&lt;code>dtor&lt;/code> how to destroy the object: to avoid memory leaks&lt;/li>
&lt;li>(how to copy the object)&lt;/li>
&lt;/ul>
&lt;p>Numerous implementations can be obtained by combining these components together in various ways. For example, &lt;code>std::any&lt;/code> is basically a structure containing &lt;code>tag&lt;/code>, &lt;code>ptr&lt;/code>, and &lt;code>dtor&lt;/code> together. As such &lt;code>std::any&lt;/code> is self-contained and can be put into a vector without worries. While it is ideal for passing a single item around, having a collection of them is not so great.&lt;/p></description></item><item><title>Implementing an heterogeneous dynamic array in C&amp;plus;&amp;plus;</title><link>https://fabien.pean.pro/blog/2020/07/implementing-an-heterogeneous-dynamic-array-in-cplusplus/</link><pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/blog/2020/07/implementing-an-heterogeneous-dynamic-array-in-cplusplus/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://www.merriam-webster.com/dictionary/heterogeneous">&lt;code>heterogeneous&lt;/code>&lt;/a>: consisting of dissimilar or diverse constituents&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Dynamic_array">&lt;code>dynamic array&lt;/code>&lt;/a>: a dynamic array is a &lt;a href="https://en.wikipedia.org/wiki/Random_access">random access&lt;/a>, variable-size list &lt;a href="https://en.wikipedia.org/wiki/Data_structure">data structure&lt;/a> that allows elements to be added or removed. [&amp;hellip;] A simple dynamic array can be constructed by allocating an array of fixed-size, typically larger than the number of elements immediately required. The elements of the dynamic array are stored contiguously at the start of the underlying array, [&amp;hellip;]&lt;/p>
&lt;/blockquote>
&lt;p>Heterogeneous containers are data structures wherein elements can be of different types. &lt;code>struct&lt;/code> and &lt;code>std::tuple&lt;/code> are example of heterogeneous containers in C++. In contrast, arrays provided by the language or the standard library are homogeneous containers, their elements can only be of the same type. &lt;code>std::array&lt;/code> and &lt;code>std::vector&lt;/code> are examples of static array and dynamic array implementations, respectively.&lt;/p></description></item><item><title>New paper published in Medical Engineering and Physics</title><link>https://fabien.pean.pro/news/2020/07/new-paper-published-in-medical-engineering-and-physics/</link><pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate><guid>https://fabien.pean.pro/news/2020/07/new-paper-published-in-medical-engineering-and-physics/</guid><description>&lt;p>My paper titled &lt;em>Surface-based Modeling of Muscles: Functional Simulation of the Shoulder&lt;/em> is now online ! Published in Medical Engineering and Physics journal at &lt;a href="https://doi.org/10.1016/j.medengphy.2020.04.010">https://doi.org/10.1016/j.medengphy.2020.04.010&lt;/a>&lt;/p></description></item><item><title>Welcome to my website, I will be your guide</title><link>https://fabien.pean.pro/news/2020/03/welcome-to-my-website-i-will-be-your-guide/</link><pubDate>Sun, 29 Mar 2020 19:21:01 +0200</pubDate><guid>https://fabien.pean.pro/news/2020/03/welcome-to-my-website-i-will-be-your-guide/</guid><description>&lt;p>A warm welcome to my personal website. After a long maturation time, it is finally online! :tada:&lt;/p>
&lt;p>It was developed from scratch with &lt;a href="https://gohugo.io">Hugo&lt;/a>, a great static site generator, and inspired myself or sometimes reused bits from the nice &lt;a href="https://github.com/gcushen/hugo-academic">Academic&lt;/a> theme by &lt;a href="https://georgecushen.com/">Georges Cushen&lt;/a>. During the journey, I learned a lot about html, css and hugo.&lt;/p>
&lt;p>Why from scratch? For two main reasons: one is that I had a precise design in mind, and the other was that I wanted to keep it as minimal as possible for my needs. Site builder like Wordpress are huge with a lot of shadow places, but it can also apply to various Hugo themes, which can easily become difficult to navigate through.&lt;/p></description></item></channel></rss>